/** @format */

import { getSession, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";

import ChatList from "../components/ChatList";
import Msg from "../components/Msg";
import Navbar from "../components/Navbar";
import Raw from "../components/Container";
import Sidebar from "../components/Sidebar";
import Container from "../components/Container";

export default function Home() {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <Navbar />
        <Container>
          <ChatList />

          <Msg />
          <Sidebar />
          {/* <Raw /> */}
        </Container>
      </header>
    </div>
  );
}

export async function getServerSideProps(context) {
  const session = await getSession(context);
  // if (!mongoose.connections[0].readyState) {
  //   await mongoose.connect(process.env.MONGODB_URI);
  // }

  if (!session) {
    return {
      redirect: {
        permanent: false,
        destination: "/login",
      },
    };
  }
  // let chats = await Chat.find({
  //   users: { $elemMatch: { $eq: session.user.id } },
  // })
  //   .populate("users", "-password")
  //   .populate("groupAdmin", "-password")
  //   .populate("latestMessage")
  //   .sort({ updatedAt: -1 });

  // chats = await User.populate(chats, {
  //   path: "latestMessage.sender",
  //   select: "name pic email",
  // });

  return {
    props: {
      session,
      // chats: JSON.parse(JSON.stringify(chats))
    },
  };
}
